# You are given an integer array nums and two integers indexDiff and valueDiff.

# Find a pair of indices (i, j) such that:

# i != j,
# abs(i - j) <= indexDiff.
# abs(nums[i] - nums[j]) <= valueDiff, and
# Return true if such pair exists or false otherwise.

 

# Example 1:

# Input: nums = [1,2,3,1], indexDiff = 3, valueDiff = 0
# Output: true
# Explanation: We can choose (i, j) = (0, 3).
# We satisfy the three conditions:
# i != j --> 0 != 3
# abs(i - j) <= indexDiff --> abs(0 - 3) <= 3
# abs(nums[i] - nums[j]) <= valueDiff --> abs(1 - 1) <= 0
# Example 2:

# Input: nums = [1,5,9,1,5,9], indexDiff = 2, valueDiff = 3
# Output: false
# Explanation: After trying all the possible pairs (i, j), we cannot satisfy the three conditions, so we return false.
 

# Constraints:

# 2 <= nums.length <= 105
# -109 <= nums[i] <= 109
# 1 <= indexDiff <= nums.length
# 0 <= valueDiff <= 109




from collections import OrderedDict
from typing import List

# Bruteforce solution: will not done 
class Solution:
    def containsNearbyAlmostDuplicate(self, nums: List[int], indexDiff: int, valueDiff: int) -> bool:
        first_point = 0
        second_point = 1
        
        while True:
            if first_point == len(nums):
                return False
            if second_point - first_point <= indexDiff and second_point < len(nums):
                if abs(nums[first_point] - nums[second_point]) <= valueDiff:
                    return True
                else:
                    second_point += 1
            else:
                first_point += 1
                second_point = first_point + 1


# Solved solution
class Solution2:
    def containsNearbyAlmostDuplicate(self, nums, k, t):
            window = OrderedDict() # <bucket>: <value>
            
            for num in nums:
                if len(window) > k:
                    window.popitem(last=False) # popleft

                bucket = num // (t or 1) # all candidate nums will hash to this bucket. or 1 for division by zero case
                for complement in range(bucket - 1, bucket + 2):
                    if complement in window and abs(num - window[complement]) <= t:
                        return True
                
                window[bucket] = num
                
            return False



class Solution3:
    def containsNearbyAlmostDuplicate(self, nums: List[int], k: int, t: int) -> bool:
        hashtable = dict()
        n = len(nums)
        w = t + 1
        for i in range(n):
            bucket = nums[i]//w
            print(nums[i], bucket)
            print(hashtable)
            if bucket in hashtable:
                return True
            if bucket + 1 in hashtable and abs(hashtable[bucket + 1] - nums[i]) <= t:
                return True
            if bucket - 1 in hashtable and abs(hashtable[bucket - 1] - nums[i]) <= t:
                return True
            hashtable[bucket] = nums[i]
            if i >= k:
                hashtable.pop(nums[i - k]//w)          
        return False

nums =[2433,3054,9952,6470,2509,8502,-8802,-5276,6559,-9555,-4765,6399,6543,2027,1723,-3032,-3319,-7726,-1425,-7431,-7492,4803,7952,-6603,-784,-8011,6161,-6955,5800,5834,-6310,1097,2327,-4007,8664,-9619,5922,518,9740,9976,4257,-7803,6023,4189,-5167,-4699,2441,5941,3663,625,5402,-3447,8888,9040,-4811,-7547,6822,1415,9372,-9262,4584,4149,-276,-4019,198,608,-4466,5383,7871,3149,-8358,9270,3565,-882,-9494,-6475,9833,-7744,-598,5299,5976,7361,-9444,3771,-5718,9051,3469,-4028,4216,5506,-8611,-9744,-8007,213,-3454,-2420,6283,-5616,-3508,-1329,4694,-7219,2056,9063,-9648,-7722,-755,-9482,9078,-8411,-3393,-4395,-1203,-2165,2170,8643,-5205,4050,-9322,6178,-973,-331,7559,-7889,3499,-7195,7725,-9155,3899,-5259,1981,4766,595,-7183,4150,-2062,3288,5047,-9789,1507,-4937,5909,-3442,-4599,-789,6931,-3100,-9151,-3665,-4228,-7466,6393,6632,-5133,-7684,4525,1150,3826,-6424,-1689,6206,-5747,8061,1502,-3893,-8528,2387,-6159,-1355,-5789,1361,-1593,-8955,4505,8885,-7793,8038,-8401,9688,6241,2518,7115,-7193,-2735,5665,8331,-1822,-6938,3307,4019,6020,-8340,-7138,4478,-6911,-1241,3829,-5387,-3139,-1707,-187,-9148,-8734,-9570,4666,-9280,-31,-4474,-5569,548,5768,-7954,-9796,9525,-56,-450,-7316,5987,25,-9590,586,-4942,-8193,-3165,6832,1436,-106,-7393,-6921,-9176,8404,1220,9014,224,2145,4099,-3517,-6904,6707,3274,1374,1868,-2740,-3041,-9858,6342,-166,-3181,6941,1132,-685,-8060,-7796,5228,9936,-15,-8382,-76,4910,-9735,-8025,9225,-4619,4279,5578,1910,-659,834,1501,7328,-8782,-6110,-4776,1321,5721,2014,5767,-5541,-7052,-2716,7768,-5243,-5997,7162,3157,-8769,2776,3018,6159,7571,-3806,-6260,-3565,5508,6517,-9469,9652,4320,8409,7357,3609,4760,1162,-1186,-6994,-2294,1820,-3094,-9049,-2426,9577,7051,-8080,-4335,3428,4351,1729,9169,989,1624,-1275,-577,5765,-7344,-8206,-4561,8191,1709,4416,9256,2439,3907,-696,4164,-5627,3748,-1003,-7352,-9282,4822,-877,-5078,2783,-8127,8810,-5625,-3563,-3644,4009,-3791,-5544,3696,-7041,-6941,-54,-2702,-8501,4985,7330,7466,526,-2886,8098,-2973,-6142,-8740,-2965,-2264,-8868,-5292,-7997,8192,-4444,-1954,1634,8758,-6569,-5179,-6504,-8153,1787,8669,-8513,-9875,1694,3144,-9540,-2051,-927,2037,1708,-1464,-9667,6297,7912,-1327,785,-3514,9784,1840,3709,-5542,-4282,-8051,7006,-3899,9159,9430,7492,-2751,-5174,5860,1499,-9942,-4468,-5941,5589,-5699,5429,6743,8444,-2039,-6824,-1257,-5906,8266,-3831,5392,1645,320,1572,-9595,-454,7877,-8070,-8432,-7719,-4199,6043,-5002,7800,2363,-2493,2626,3390,6243,-2734,7055,8290,5547,2828,-4021,3943,-5139,8892,1597,-7757,7532,-3109,8516,8161,-8882,-3209,6165,7309,-1325,7792,7918,-3936,7859,-7681,-4647,-6123,2293,-9438,-5270,-5978,-4520,-9347,-4569,7858,8471,910,-6564,-9980,-1603,-7042,5674,2103,-9855,-9269,5549,-4239,4236,8890,9624,1528,9666,3458,-643,-6591,-9008,-6535,-5993,-2978,-3478,-4844,3370,2072,-5256,-8584,-7659,4674,-2893,-7729,-2212,2792,-9012,5011,5325,1698,9680,894,-8603,4059,-4729,-8749,-3854,2875,-527,-9600,3236,-6607,-4491,-3488,-1586,-1579,-9039,-372,-2798,8904,1688,-1669,-83,-8200,-490,-6849,9792,90,-9453,9725,-3525,-221,5067,4441,796,5324,5284,8709,-5893,8174,970,-1067,-9517,2046,1590,-2975,9544,-7984,-7701,8644,8456,-212,77,5664,-7414,8321,7407,-756,7649,-4851,-1071,278,-5076,6462,-8670,-4849,914,-4500,5401,-7112,-4464,-7643,-3685,-5307,1749,6949,1478,-6243,9320,2516,-798,9095,5627,6327,-185,-6435,8979,6985,4570,6442,-909,3919,1880,4593,-2440,2523,7331,2662,4287,3712,4071,-2609,-9451,-6762,-5388,-1929,8572,3566,1354,1957,-147,-1628,6002,-4368,8312,-2033,-6340,-4190,-8975,6894,177,-3761,2310,3794,-8940,1444,-6522,325,-1908,-88,-3091,-7472,5990,-5134,8089,-9055,-9485,2582,-6927,5660,-3187,8264,8960,-1842,3308,-1809,-1378,2943,430,2192,364,-9458,1143,8672,4037,-7739,9640,-2534,-272,-3122,417,693,-2732,-7286,8564,-8604,850,-1055,9967,-7016,-3601,-1125,-7953,5331,2822,2729,-3483,1048,-8439,9281,2960,1539,4929,-5151,2635,-7023,-8865,-567,-3486,-6882,-1892,3741,5260,-7132,-453,6482,1433,-8227,2897,6354,686,-9429,-9521,-6943,-329,-4735,7590,-6850,8844,5423,3169,-2041,7308,7823,-7166,6927,-1738,-1644,-7447,1238,-9832,-7865,-6837,-7097,9469,-1927,-7043,6872,-2683,-5509,7301,5147,-3235,5039,-4323,6414,1104,4745,-6222,4113,-6663,-5571,7765,7034,7741,-2855,-7126,5866,-5831,2790,9748,8665,-2383,761,-690,4540,7229,-8187,10,6426,-6312,8287,-8522,-4186,2083,8592,3843,8052,-9844,8562,671,1969,4215,2178,1686,-9412,-5527,-1193,6643,-5515,-5389,3820,-7104,9546,1409,6613,1086,-3375,1192,-382,6891,-4693,-8897,763,3457,2538,-2011,-9687,5935,8929,7525,3583,-8451,792,-5564,7589,9828,-488,4846,-268,5675,-1462,8345,2868,-2189,-509,-6179,-1624,1404,8326,-5867,2224,-5598,2684,5628,5000,5586,-5596,104,-2182,-5108,-3698,5107,-8532,5697,6932,-6650,6223,1950,-7535,2515,-1153,2927,6450,-9417,-668,-2708,-5852,7896,4219,-6388,6457,8170,9459,-1415,2075,-672,7471,6784,909,3362,2855,-7060,276,2460,214,-28,3590,5360,-1444,-6224,5706,5787,-650,-9022,3981,-9607,-8154,-186,-326,-7585,758,5317,-4695,8878,3850,8796,7252,-2816,158,-6765,5338,848,-7147,7581,-7842,3101,2660,-6171,9011,-6455,567,-8751,8970,6860,9899,-1916,-379,9836,9812,5918,4767,-6087,-6304,-3743,-8908,-870,-7500,3316,655,6576,-4136,2322,8475,678,4156,-7231,4017,-2007,3045,5605,6209,3656,3533,3176,1190,9311,-6433,2446,2022,2546,-2880,-9502,-3760,5612,8343,-3062,9484,3510,-7716,4638,8716,5799,-7091,7261,4651,-2252,8911,-2245,-8361,6840,8027,-7820,-674,-5250,916,935,9579,7335,-3061,47,-1549,1268,3737,-3646,-6254,-9574,-3325,-944,-328,-7886,174,8521,2926,-984,6098,5908,-2587,3264,9396,-6622,866,9454,4568,-6283,-9395,5571,1852,4225,-2240,-4085,-1947,6282,-402,-3668,2856,-3157,-1207,-821,-9157,-9706,-3059,-7766,8096,-4785,-8032,9549,-246,2107,-9114,4969,8656,-4198,8862,4998,1333,754,-8272,8053,-5895,-6466,-8942,9123,480,-7590,-7003,7635,-2787,3306,-1426,3121,5481,-1988,6581,1961,2840,-1485,8741,-7160,-5012,5988,3385,4146,7236,-7857,-213,1522,6533,5625,-1393,-7745,2114,-6554,5327,-1923,3620,-475,7214,-6366,-647,-7150,8124,4773,1379,-2331,6569,712,5142,8172,1909,-1775,6846,4834,2139,2862,1674,124,-2143,-6352,9527,1032,-2364,7452,9555,-6917,8727,-5303,1016,9418,9009,-4900,-3717,-8094,9308,-3734,6889,-9020,-7255,9136,-6502,4754,8007,-3553,6621,-9887,7165,-5888,4871,-5054,4551,9497,-8242,-1074,9346,-6785,658,2940,-3551,-7351,4970,9875,-549,-2678,1895,-8681,8113,3513,3814,-603,-1681,-9169,-8353,8399,-3327,2397,-5185,6570,4196,-5021,4547,7128,-8991,2630,-3355,-6151,2491,-9736,-1390,-1180,-2960,-5116,3485,5002,901,-7386,8790,-1962,190,3097,-6429,2815,-8061,-3195,2311,100,-9665,-5786,-6537,-8466,3266,543,1628,-5824,1160,-5396,7511,1835,2279,-114,-5036,-8406,9729,-2730,-5432,-5807,7778,2738,-1692,2371,-1217,-6721,-9377,8162,-8638,-5375,8145,8178,-3356,6293,-4336,-7357,7368,-6077,-2523,7213,2478,-6353,1667,5499,357,-222,-6212,3039,-8204,2395,-6318,6422,6418,-8972,611,7211,-7928,-4997,7603,-375,9557,1481,-5260,-8262,-5448,1860,9245,6486,2144,6654,8272,-2350,8233,-6425,7723,777,-9881,-5674,-1631,8677,-5850,-3087,9476,9018,-9287,9939,-9243,9752,-4692,-723,-7967,-1476,-1192,9830,-9362,8883,522,-8042,-3363,7444,-3914,-244,8514,-6967,-7156,-7691,5822,9825,-8379,-8097,-8587,7845,-1247,-2819,-1971,3106,9591,8243,-3183,-1297,436,-613,-4664,3275,-1722,3780,-4515,5889,3360,-1977,7641,-9092,-9161,4922,5750,-5686,7325,7172,7188,2088,-9067,-9069,9799,3221,-6016,9128,3584,6567,2346,8128,-9925,-3000,-5769,-6021,-6952,-4603,-9296,6489,-1540,3740,-5348,7338,-1677,9075,8051,6663,4583,-1560,839,8210,202,-662,-5267,-1508,3540,3619,3932,4548,9253,9637,-5090,-5944,-8771,119,6086,-2995,752,9013,2953,-5557,-4612,6675,5041,-6322,2398,-492,-3432,-761,-3458,-5011,-7087,7520,-2209,-7542,1658,-325,-2429,-4022,74,-9715,2552,1947,225,-8295,5667,-6076,-7314,-8977,-1283,-1980,-4481,-2201,8209,-1764,4573,-7808,5180,-1777,3166,5806,7209,-8236,-6035,6856,-3128,3948,-621,-3809,-2982,1375,7797,4703,7110,-1017,59,4900,934,-922,994,6525,6501,2339,6873,-129,7594,-1638,-9183,3951,-3346,-1835,-6885,8763,-2890,4528,-7086,-7628,674,-1559,4207,8636,-4690,8623,9508,-4938,1200,-4577,9367,-477,7040,332,8406,7961,-2565,-2354,-6669,-4539,9601,-5234,228,8594,-6860,-9791,-2421,7474,5469,8668,7824,-1097,-1706,-1463,2974,5177,-3969,-8323,812,-5971,-4985,-3718,-4129,-8347,7010,5698,457,-5057,7897,8286,-2831,4228,596,-5468,3046,9273,8415,-1882,-780,-98,5602,5749,-5788,2656,-8492,-8394,6634,8417,3734,-1903,7248,-519,-5568,2545,8859,2504,6290,1660,-3557,150,-309,-6368,4431,1165,3391,2127,8031,7378,-9922,-5853,-57,542,9227,7591,7196,-2704,6468,-6914,4073,5595,-3700,7226,7182,3204,809,-7497,9755,-8970,-5477,1988,-9211,-1511,-1062,1949,-7851,219,-473,-1227,5428,2604,1151,4181,1311,-9044,-5255,-4966,9299,-544,3155,8315,9055,3539,7388,5090,8306,-3007,6095,-7401,-9692,4504,-9939,4806,8132,5079,-652,7348,-5793,3322,6382,2307,-510,8203,2055,-1829,4135,-3159,9616,-3538,3831,5726,-5795,8080,-9708,-5711,8467,-7158,6906,1900,-6248,775,6598,-4598,-223,-9909,8262,-7530,394,-6971,-24,-645,-397,-5719,8707,7291,6429,4709,5630,6768,-8663,8642,-3310,-1983,-7944,9964,-7575,8795,-2529,9653,-6987,-8961,-197,-1702,8049,-5746,-608,-9770,5676,-6696,189,-2711,6745,-3369,-3810,5868,-8277,-7952,626,-1430,-3509,3488,-8656,-5122,7075,993,9723,2289,-8083,-9210,-7122,-5401,8797,-9907,5518,6113,-6570,1889,493,-6660,2035,7579,-466,3134,8986,-3247,-1030,-5943,400,1438,7588,-4189,-6130,8621,-9468,311,-6858,-5649,1068,-8510,-7100,-584,6244,-8781,-1261,3868,-377,8246,6078,-8744,950,7323,-3103,3196,-5528,-3263,-9131,7813,-7330,5556,303,2186,9606,4572,-2262,-7085,7032,7111,-6397,4668,-9397,2294,-9493,-8364,-7706,-7709,4168,9379,4211,-8386,-6412,-4816,-3837,-3708,1652,379,3653,4975,-2142,3065,1362,6763,9619,-4068,-8965,6879,-5581,-5321,-8542,8715,-904,-7841,3130,-9837,3194,-2466,-6277,347,8861,-7018,8332,6523,3708,-2630,-3745,-5696,-2317,6392,-947,37,-4988,2217,-5816,-6229,-5365,3092,-374,4560,-9258,1085,-4122,5030,-8612,7955,-1472,2542,2048,-2391,3986,8510,9570,-1697,3161,744,857,-4502,-7194,5023,6069,1582,1197,-2651,2117,-5552,9809,292,617,9918,-7409,8469,-3420,1127,846,-7994,-3873,5550,569,1761,2378,-501,3333,-7064,2966,-8404,2040,6642,-2528,1536,-7019,-2611,-6446]


print(Solution3().containsNearbyAlmostDuplicate(nums,100,50))